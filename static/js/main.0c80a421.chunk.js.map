{"version":3,"sources":["constants/counter.constant.js","reducers/counter.reducer.js","reducers/index.js","actions/counter.action.js","containers/App/index.js","index.js"],"names":["INCREASE","counterConstants","DECREASE","initialState","count","combineReducers","counter","state","action","type","counterActions","App","useSelector","dispatch","useDispatch","increase","decrease","onClick","store","createStore","reducers","ReactDOM","render","document","querySelector"],"mappings":"iOAAe,EACD,WADC,EAED,WCANA,EAAuBC,EAAbC,EAAaD,EAEzBE,EAAe,CACjBC,MAAO,GCDIC,cAAgB,CAC3BC,QDGW,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC7C,OAAQA,EAAOC,MACX,KAAKT,EACD,OAAO,eAAKO,EAAZ,CAAmBH,MAAOG,EAAMH,MAAQ,IAC5C,KAAKF,EACD,OAAO,eAAKK,EAAZ,CAAmBH,MAAOG,EAAMH,MAAQ,IAC5C,QACI,OAAOG,MEbXP,EAAuBC,EAAbC,EAAaD,EAMlBS,EAJI,iBAAO,CAAED,KAAMT,IAInBU,EAFI,iBAAO,CAAED,KAAMP,ICejBS,EAhBH,WAAO,IAEPP,EAAUQ,aAAY,SAAAL,GAAK,OAAIA,EAAMD,WAArCF,MACFS,EAAWC,cAETC,EAAuBL,EAAbM,EAAaN,EAE/B,OACI,6BACI,sCAAYN,GACZ,4BAAQa,QAAS,kBAAMJ,EAASE,OAAhC,YACA,4BAAQE,QAAS,kBAAMJ,EAASG,OAAhC,cCRNE,EAAQC,YAAYC,GAE1BC,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,OAEJK,SAASC,cAAc,Y","file":"static/js/main.0c80a421.chunk.js","sourcesContent":["export default {\r\n    INCREASE: 'INCREASE',\r\n    DECREASE: 'DECREASE'\r\n}","import { counterConstants } from '../constants';\r\n\r\nconst { INCREASE, DECREASE } = counterConstants;\r\n\r\nconst initialState = {\r\n    count: 0\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INCREASE:\r\n            return { ...state, count: state.count + 1 };\r\n        case DECREASE:\r\n            return { ...state, count: state.count - 1 };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport counter from './counter.reducer';\r\n\r\nexport default combineReducers({\r\n    counter\r\n});","import { counterConstants } from '../constants';\r\n\r\nconst { INCREASE, DECREASE } = counterConstants;\r\n\r\nconst increase = () => ({ type: INCREASE });\r\n\r\nconst decrease = () => ({ type: DECREASE });\r\n\r\nexport const counterActions = {\r\n    increase,\r\n    decrease\r\n};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { counterActions } from '../../actions';\r\n\r\nconst App = () => {\r\n\r\n    const { count } = useSelector(state => state.counter);\r\n    const dispatch = useDispatch();\r\n\r\n    const { increase, decrease } = counterActions;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Count: {count}</h1>\r\n            <button onClick={() => dispatch(increase())}>increase</button>\r\n            <button onClick={() => dispatch(decrease())}>decrease</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport reducers from './reducers';\r\nimport App from './containers/App';\r\n\r\nconst store = createStore(reducers);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}